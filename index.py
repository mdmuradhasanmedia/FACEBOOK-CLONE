# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Wed Apr 23 06:14:57 2025
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'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yIVWWxmW310RGhlUtBXVStGczlVVOdUTsZVeW1GcXZVbSdFVrdGeSdlSoJVbxg1UFpVcWFjUvJ1VGp1YEZ0USpHbyZlbKNVYrFzVkVEZhZVV1cEVVB3dNFjWXNlaGhWVwAXcWVEeX10VGhlTXRXVXZkS1VFbadkUG9meTtGZpF2MBh3VVRWYNdlRZ10VxY1VGp0RWBTNXZlRShUUtVjTZZFcGdFbWtkVspUYaRkTXN2aJpnVGRWYiZUS4N1akNVUwA3VWhlULJFbkdVUtBnVTRkRyVlbkBjUWpleX1GeWFGVFlnWE50VWxmWMR2RxcVZEJlcVJDcXFWMadnUtFjTiBDc1ZlbGFWTW5EWT1GcTJlVwNXWVR2dSxGcYFlaON1VuJFdWhFchZ1axgkVtVjWSVFcyZlVK9kUHZkWaRkRoJ2aaFnVWh2dWdlTvdVb0dlVw8WeZhFZrZFbkFjTUJUVhhFaIdFboFmVtp0MkZEZaV2R5MXWxQ2dixmTV1UVWl2VtdmeXhFbGFGbalVYHhnUWNTQ4ZlbNVTYxoFSNZlVsZlVwNnVtlzRW1mSUFmRadFZwsGeVtWNhJ1VO1UVrpVaWBDczdFWKdlUG50VRtmUrJVRwhUWu50RhxmV4dFbWh2VtJ1RaRlQXJ1axI3TXRnWXhkQGZlRodnYWJFaUtGZXNWb3pnVu50UN1mRUp1R4NlTrBHSVtmTPZFbkd1YGZ1aXZkWHllVnhXYxo1MlVkVXN2avhXWXx2SSdkV2UFbadlTWZUVWhkT0IWV1AlWFZ1ahdEeHZ1ak9mVWRWMRpmTrV1Moh0Vu9GMhFjSyVlaGZlVzIkRVFDcrJVbOZzUrRWaS12Z6ZFWGdXYxI1VNdVMW1kRvhHVW50TixmWHJ1aSpGVsB3RXx2Y41kRZBzVspFWXhlQGRlVkFmYGJ1RT1GeoFFMZlnVYp0VhxmWXplRa9UZqZkcVtGZTFWMslkVrJFWXZkWHlVMoNVTWplMhdUNWRWMWVlWGJFNiZFZ3N1aa5UTHhjeWxGb0ImVa90VthXVUZkSHlFbktkYGxGMhdUNTZ1aKVkWEJkSWtWMzMGRCd1YzI0RZ1GarJVbVdnVsp1ViBTNZZlRkNnUrFTcaZkVPdlVaNXWYp0cXZkW1cFVChWYFpVcWNDZKJVMKREVsp1VlVkRZVVMnFjUyoEWWxGZpRFMJpnVYJ1QNFjVx1UVkhWZsp0VW1GdrJmRspXVrRGVhZFcyZFWOdkYVFDVaVkVXRGWBhnWFVTYWxmT0UFVGdFZzI0RXtGavZlMSh2VrZlajtGc0VFbkNVTxYFejRkQWF2aaFnVxA3aSxmWYRmRkVVZFZUSZFTV4JlMOlVVrRmTldEZWZlboJVTsZEVXtmVh1UVshEVXZ0dWFDbZNVb4pmVzIEdV52b4FWMahWVrJVYO5mQGZFbkNVTXVUMWtmWORmesJnVsRWYWdlUwVVb0JVVwUzVZpmUvZFbaZjY6JEVhdlUyZFWs9kUtpEVPZlVhN2aKlkWGZ1VSxGcz0URWl2YrplNWhlShJVbGVVTXFjVlZ1b4R1V0BjVWJlejRkQXl1VSZFVWx2USFDZENVb1g1UIdWeWdEbhFWMKZzUVp1VTBTNzZlbStkUtJFWUtmUpV2ashlVuhmbiZFZHNGRGVVYYFVeZpmVXJ2RKBlWEZ0VSNjUYRlVSBjYWpldStGZXJlMoNnVsh2Vl1mTUVWRkFmVVp1VZ5GZv1kVad0YHh3TZdlUGpFSaFmYGpFVWxGaXNGWBdnVVlzaWZVUxoVRahlVwoFdW5mUL1kVOhmVtR3VjZkS0RFWwt2VGpVeVpmSrdlRwJnVFBXYidkREJVbxcFZHhGdVx2bxIVMwhUTVZVaTtmWxZFbk9mUxoVVV1GeXV2V3hnVup1bixmV1EmM0xmVuJEdVFTT41kRJdXYGp1Vlt2a3lFM1EWYxIVTVtmWpZFMwN3VYJ1bixmSXJVbwVVZtJ1cV5GZh1kVSZ1YFZ1VWhkUYRFbkdVTWlFeUZFaVJVMvdXVXZUYSZFcWNFbaNFZtJVdWBzZ1IlMWR1UsJFVOZkWzlVV0tkYGtmMXtmVYZ1a1EXVwg3SNxmSUNlaOZ1Yw8GeWdEewIlMNdXVsp1VhBjSxZlboNjVxQGWNVFZqNWR1cVWtlzSixmWKdlaCVlVwAXcVpnW3ZFbKZnUtFjVSNjQWZVbGdlVVFjNXxmWORFM1UkVu5UYS1mRT10VxY1VWp1RUZlTrZlVShUUq5EVWhFa0ZFbOtUTtVEeaFjWYNWMJlnWFVzRSdkSLNVbxMVVzIFWXhlSDdlRahVTWR2TSRkRyZFbkNVYxwWSWtmUYdlRwdUWxQ2UNZlWI90VxolUw8GeUZlVhJFbwpXTVZ1VVFjS1ZlboNTTsp0TadEeUJ2MCNXVsR2QWxGc5VWRkh1VuJEdWdFarJmRKJnYEZkVkdEaZd1VotmYGZFSidEeoJlMSJnVuxmVidkVoVVb0RVWWlVeZhlTrJmRkl1VqJEahZFcWVleOdkVtlEMaZkWXV2VklVVxgGNSJjRZNFbalGVxolcXVFZTJmVWBXTUp0aNFjWXZ1a0BjYWpFNOZkVTV1MCRXVXh2RidlRIVVb1c1YYFEeWVUN0YVMORzVVp1VUNjQXdFbkFWTWpFaaRkQp5URwRnVrR3TSZkWwIVbwVlVwoVRZpnQh1UVxQFVtVzVTZEczZVMVhnUy40VV1WMO10RSJnVudGMNZkSzVGRKhWZHlzVV1Gd31EbWlnVtB3VW1GazVlbwdkVwEDTlZkVaJVMKRnVxg2UiZkWIJGRGhGZzIFWXhFayJ1VWBXVtRnUWZEcXRVV0dlYGplNkJTMYRVbSNnVYx2dWxmSYJmRkV1YrpUSWFDcXZFbRBzUtFzVjFDcVdFVatkVWxWWjdUMT1kRaNXWrR3TixmVY5UVWZVVuhGdWZFbrZFbaNjWFp1VXVUS6llMsRjYWlEMUxmWpVGRSZlVuBnaWJjVZVFbaVVTUJkRZtWOwIlVap3VthnVhRVR5pFROdlVspFTkdUMXVGRSZVVsJ1diZlRQJlaKNlYwUTdWxGb310VO90VsZFVldEdzRFVG5WTWpFSjdEdPdlaGhUWsJ0RSJjSoR1aSdlVspESWxGZDFGbOd0VqZkTjFDc1ZFWRFjUX5EaaVkVrdFRFdnVq50bixmWxEGRK5UVwoVcWVlWLJVbKhVYGRmWkBjRZZFba9UYsZ0MNdEdTZVMKZ1VVZ1dhFDZQZ1aapmVyg3RZtmTwYVMSBzYGZ1ahZlSyVlVOdkVtpEVhZkWXRGMrhXVrVTYSdlTNV1aalmVwA3cXhlUr1kMSdlVspVVOVEc0ZlbOFmVGtmMTxmVadFSShUWwo1cSxGZ2N2R0dVZXljcU1mRhJlVwhmWHh3UTFDc2YlbRVjUyYFcXxmWYVmVGNXWVR3TiZkUYZVb4x2VHh2RZxGZhZVbKR1TWRmWTdEa1ZVbwNkVFVjSidEeoZVMwV3VWRGNWBTNYZVb4ZFVycHeWxmTrJFbaFTVtFDbUxGcyVVMFVjVWplcSpmSXJ1MCdVWxA3RSdkSRJ1aklWVwUTcW5mTTZlMGhVTVRGbNxGbXVFbktmYGp1VW5GcVFmVKJXVygDeNdkR0clVahlVuF0dZZFZHFGbSd0UthHaRBTW5ZFWKdVYsp1VaZkWPVmaGJXVrR2ThFDZIV1akdVVxolVWpnTr10VGNzTWZlWlZEbGR1V4tmUXJ1dS1WMO50R3hnVsRGNNxmTU10VxQFVuFEeVpmQXJFbwpnYGZFbWNjQ0V1azhnVVFDUUpmRVZFWCZ1VWJFMWBTNYZlaGdVTVFTWWVEZh1kRGh2VrZVYWVVNXZlbkFmYGRWWhRkSoZ1MShFVuBnTidlVERlaGdFZHhWSWFzYxIlMOh2Uqp0USBTW5ZFWSNUTxoFUkZEZP1kRJhnVrR2aWZFb6VmRkRVYGBnRZZlQPZVbKR1UtVzVWhVQ3Z1VsdlUrBDMVpmRX10V5c1VsRGMN1mUhp1R4N1YsB3RZxGZXNlRaBjUtBXVWVFcFplVwtmYGplekdEdWZ1aaZTVyY0aSdlUV5kVWlWTyIVWWxGaT1kMG9WZFRWaN1mTXZVbFFjVWxGMhdUMqZleWh0VuZ1SWFjS0oVMkZFZGpVcWFjUhJ1VOl1YHh3UkNjU0ZlbKdUYtZVWjdUMUZFMahUWtZ0cWxmW2MVVW5EVuhGdWVkWLJmVKJ3UthnWkdUU6plRadlYG5UeXxmWORVMaJnVYZ0SWZFbv1UVkhWZWlFeUdFdwEWMsl1YEJkVVdkUXRlVs9kUx4ERTxGaXdlRJpXWth2RhxWWyQlaGhWYyg2VWhFZ2ZlVal1VrpFaXVkWYl1a0BjVWxWSV1WNXRlaGhkWVR2VStGM3plRWp1YzcWeaZUT4JlMSd3UsR2UkFjWHZlbw5mYWZFVS1GcVJVVvhXWW50RiZlV1oVMod1VqZESZhlSLZVbKh1YE5kVjFjSYllVOdUYs1EeXxmWONGM1Y1VYJ1dhFjUwZ1aWFWVEV0dWpmUhZFbkp1YFZlTWFDczZVRatkYHZERSpmSWNGbaFnVsp1aWtWN200V0NlUxk0dXVlWvZVMslVYGZlUNNTQ4Vlba9mYsp1MhBjUsFGbaJnVxw2UNVVMEJ2R0d1UW9GeaZEZXZ1axMzUsR2UhJDaYdlVo9mYt5UYkdUMVdVRwNXVuR2cWZFbJJlbwhWYHJ1RaZFbX1UVxMDVshWVSJDeWRlVOdlYGZ1bUxmWXRWMwdkVsh2UXZEbYZFbaBFZww2cZVFdrJmRSpUYFR2aXdEazZ1VotUTWpFVhRkSXNmbCNnVHdHeN1WU6ZlaGhmTGZVcXZFZTZVMkBlWFp1ajZlWzZlbk9kYsplVXpmRWRlboRnVxg2RidkRQNlaGplUtdHeaZEawIlMOF1Vth3VSFjW1dVVWtUYxY1UNZFZW50VSdlVu50aixmVZ5UVWpGVxA3RXxGZTJ2VKRkWGpFWWpGbYRlVkdkUH1EeSZFZOVleWZ1VYxmbidlTXFWRahWVwAHdWtGcHZlRShUVtFDWXdkUGlVVwNnVtpUehdUNaZlM3dnWHB3VhFDZaVVbxwWVyg2VW5GZuZVMsRFZGR2TiNTQ4VlaSdlVsBHSWxmVsZlaWRnVHh2SSJjS6pFROZ1YxA3VZdFarFWMWlVVthXahpHbydlVadUYtJ1caZkVOdVVwNXVrR3VWxGZXFGRONFVtJ1cVBTNLJVMKR0UsplVkVEcHZVMaNkUHZ0bTpmRo1UVVlnVYJ1QNFjWPJFbSRlTWp1VWtWOPJGbspXVtFDWXhEa0Z1a5MXTWpldU1WNXNlVKRnVGR2SWZUWwUFbk5UYwkVeWVlVhJmRKFWTVRmaktmWYRlVk9UZsZFMS1GcVRVbSdFVwAXYSxmTQp1R1Y1VIJkVZJDarJ1VWlFVrRmTNdEdJZFbjFjVWxGWXtmWqNlaWZlVsR2cWFDbwE2RxomVyg2RXtGeLZVMaNTWxgGWlZkRIZVMoNlVslkeaZkWpJFM1clVGh2dWZlUwVVb0JVVwo1VZxmTvZFbaNzUUZ0UUxGcGlFM4NlVtl0dTxmWVRWMWVkVx8WMiZlUZRVb4NFZxolVXVFZTZlMGVlTXFjVNZEczllVjVTYxoVNhFjVOFWRaVUWWZ1TWxmSzoVRad1VExGSaZlTLZlRNBDVtFzUZhFaYZFWwpkUtJVWhVkWqVVMwNHVW50QixGZId1aaZVYVVTcVVFaXJ2RKhGZHFzVlVkRZRFboFmYGRmUUxmWp1kM4llVxo1bNJjTPdVb0NlUIJ0cV1GdTJmRWdkYEZ0aXhkUIlVMCdkVwEzRS5GcaJlbCdkVxo1Qhx2Y5lFMahVVwUzVX5mTDNlRa9kWGplTWZUW5lFVGJ1UGpFWjVkWOZVMwNnVFp1SidkREJlaKZFZFB3cZFDZ3JmVGVzUsR2UldEZzZFMa9mVxwGVWtmVqVGWBhnVqJEMiZFbI10V0xmVYhGSX5WQx0kRZFTVXVzVlhkTYR1VotUYspFUVpmSTVmRWN3VYNGNWJjVXN2RxYVTFxGdW1Gdv1kRWp3VrpVahZkWHl1MoFmUs5EUPZlVVN2aaVkVWh2diZlRoV1akhVUwAXdWBDaD1kMOB3Vth3UNxmSHlVb0RjVxYlNZFDZsZlMSZEVqV0dSdlSzQWRWd1YxA3cWd1a41UbRpnVsp1VTNjU0ZlbnBTYx4UVldUMXNGMZlXVs50aSxmWxUVbxwGVsBncVJDaL1EbKRzVUZ0VXVFcyZVbGtmUtpUUX1GeTRVMalkVuJ1RWdkRYJVbwhVTXJ1RWFjTTFGbaVzUVpFahZFcGllVONlYWpFaVtGaXZlVwNXVs5UYSdlTMR1aalmV6ZlVXhFaCJGbaZFVtBnVTRkRGlFbwNkVGBXSS1GcYFWMwZUWwQ2dNZlSI90VxY1YrpVVUZlQhJmRaZnUthnTVBjW1ZlboNTTsZEWadEdTR1awNXWVR2ciZFbwoFROtmVsp1cVNjShZ1axAlVtRnVjVFcWdlVRhnUyYUNWpmRORFM1MnVYdGMSZFZwplRW9UWVVDWV5mWrdlRapXUq5EaVpnRYZlbs5kYWpEaXtmWhRWRwdkVxo1QhxmVJ10V0NFZygGWXVlW3JVbGFXYHhnUTZEcHRVV58UYxoFSORlQTFGbaJnVzY0RNxmWUNVb1c1Yw82dVBTNwYFMxY1YEZ0UNhkQXdlbORTTspFaadEdTdVRahFVWB3RSZkW6VFbkhGVyEFeZpnWh1kVJdnVWJVVjBTS6VVMWRjYWpFVTxGZp1kMSllVsp1dNdkRYJVbwV1UwUzRZxGZ0YVMsl0UqZ0VWRlVIdlaZhXYxoESlRkQXNWVwJnVyQ3biZkR1MGRGNFZyIVWWhkU3Z1VShFZHFDWWVVNIRVV0dVTWp1VhRkSqZlMSJnVVh3dWxmSYJmRkVlVygnVaZlW0IVMwZTTWZlTjNTQ3dVVaFmVtZ0bT1GcWVmVwNXWWR2TXZkUIJWRWx2VGp1RZdFaLZFbKNzVspFWkh0Z5Z1RoRjVxMGMUtGZTJFMwdlVFh2TXdkVXJFbSRVTUJkRZ5GZwIlVap3VthnVhRVR5pFROdlVspFTkdUMXVGRSJXVyA3VhFjW3JVbx4kYwAXdW5mRh1kVOh1UtB3UShlQzVFbk9WTWpVShZEZrl1VSNXVrdGeNZkWMZVb1olUVBncWZVS4ZVMVFjWFpFWVBjW0ZFWKdUYt50baVkVsZFVFdnVqJ1SXZkW65EVCpmVGBnRZFDchJ2RGhUVthnVSZFcGplRk9mYGFleXxmWpJVMKZlVu50bSFDZZFWRWh2VYJ0VVpWU1YlVSlkVsZFbWZFczZVb5ckVtpEVhZkWXRGMrhXVxQ2VWtWM0QFbalGZyI1cWZkWDNlRkFGZFRWYWVEcIlVb0dlYGZleXtmWWZFRGRnVVR2cidkRI90V0ZVZEJlRWFTSxIlMOZ1UrpFVRBDcZZlbSBjVwEDcX1GeX5EbKdUWtR3bWFjV0IWMap2VHh2RZJjRhZVbKhFZGZlWTZUS6Z1a4EjYWZUSXtmWO10RRhnVrR2UWFDZUR2RxY1YFVzVZ1WOLJGbaZ1YEJkaUxGcyVFMs9kYWpkchZkWhZ1MnlXWyY0aS1mT2M1aklmUwUTcWZlV31kRWhVTWRmVOdlUHZ1MKNUYspVWXpmRpF2RSZkWW50UidlV2dFbahlVuF0dZBTN0ImVSV1TVZ1VTFTS4ZFWKdVYsp1VaZkWPVmaGJXVrR3dXZkUYV1akdlVGpkVWpmTzZVbKhEZHFjWSBDcXRVbotmUXZFUTpmROFlMoNnVuB3MiZFZwp1R0dVZFBHWV1WOvZVMwdkUrJ1aWZFcHdlbwtkUyokeR5GcXNGbvhXWWB3VStGNwIWRad1U6ZlcWxGah1kRGh2VrZVYWVFcXVFbwtWTxoVeRpmTVZVMwNXVqZ0UNdlRyVlaGZFZykjVaZEavJmRalUTUJ0VTNjUGd1aodUZsZVcaVkWsVGbKNnVtR3aXZkU0MWMk5kVEZESahkQHJ2VGhUVsh2VjZ1b3ZVV1QjYW5kWVxGZTFWMZh3VVh2bixmShFVbwZVZsB3VUVFZXJGbsZ0UtRnVVpmR0ZlVsdlUrFDVaZkVVJFMKlUWXZUYhFjWSZlaKh2Yyg2VWNjRLZFbsl1VrZVYXtWNXllaSdUTspFMTpmRXZFVWRXVzkFeWZlW0QmM0ZFZFpUdWJDcrJ1VGplVrpVaWJjUyZVVkN0VGZ1VldUMYZFRWZlVu50SixmWXVlaKpmVxAncWZlWhJVbKh2TVZ1VXdVU5plRadlYGJVWT1GeXllVKVlVsZ1dWZlWYdVb4hlVxo0RUVVOwEWMap3YFZFWWNjU0ZFbsNlYVBTMUZFaXVmRrhnVth2RhxGZTN1aalWWXJ1VXtGZw0UbSdlUsJFVNRlQGllbkBjUWpleX1GeWFGVWhVVUJVYidkRUp1R1o1YxoEdWxmQTJmROZFVqZEaNZFbXZFbodVZt50TX1GdTJFSCNXVtR3UiZkVH9EVKtWWXF1dZpmULJWRxsUYGh2VjhlQyZ1VrhnUyYlWX1GeXJ2aaV1VYxmWSdlRvpVRWxmVqZlVZpmTrdlRapnTVZ1ThZFcHllbkZlVxokciZEZYZFbaFXVsVFeWBTNvN1aalWYwo0VXtmV3FWMkJ3VtRHWS12d4ZlbOBjYWplejZkWrZFSoh0VuFUMWZlWIZFbadFZyMWeadEbrFWMWVzYHh3UZR1a3dFWStWTyI1VOdVMVd1RSNXVrlzdNZkV4dFbWh2Vsp1VU5GcX1kVZFDVXVjWStmWFZ1V4NVYx4EaW1WMoFVbRpnVuJFNN1mRUplRaRVZWZ1cZVFdLZFbSlEVshGbWtmWVVleFdnUXpEUPdVMYJ1MCdkVysGeSJjRZV1aadlVx8GeWtGZTZVMkRFZHFjVjdkUXZVbGdlUWpVNWhFcSV1MoRnVzAncWtWMyVlaGpVZXRWWZFzZ4JlMKl3UtFzUTBTN2YFWKNlVyYEUXtmWpdlVZhHVVp1VWZkU65EVCRlVYhGdWxmTLZlMJpnWGh2VkdFa0lFbkdkUHpUYW1GepRmM4hkVrp1cS1mVhNWRkl2YVpFdW5mThdlRsZDZxQGWhVFcFdlaGpWTWlFMPRlSXJlesRXWrh3TNdVR1klMsplYyQXNXdUOuVmVsNXYGhWYKl3awdiYokyXogyYlhXZ'))
